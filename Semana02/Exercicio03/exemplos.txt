### 1. Variables (Variáveis)

```bash
#!/bin/bash
# Definindo variáveis
nome="João"
idade=30

# Usando as variáveis
echo "O nome é $nome e a idade é $idade."

### 2. Positional Arguments (Argumentos Posicionais)

```bash
#!/bin/bash
# Argumentos posicionais são $1, $2, etc.

echo "O primeiro argumento é $1"
echo "O segundo argumento é $2"
echo "O total de argumentos é $#"
```

Executando:
```bash
./script.sh argumento1 argumento2

### 3. Output/Input Redirection (Redirecionamento de Saída/Entrada)

```bash
#!/bin/bash
# Redireciona a saída de echo para um arquivo
echo "Esse texto será salvo no arquivo.txt" > arquivo.txt

# Lê o conteúdo de um arquivo
cat < arquivo.txt

### 4. Test Operators (Operadores de Teste)

```bash
#!/bin/bash
# Testa se um arquivo existe e se é um diretório

arquivo="arquivo.txt"
if [ -e "$arquivo" ]; then
    echo "$arquivo existe."
else
    echo "$arquivo não existe."
fi

### 5. Case Statements (Declarações Case)

```bash
#!/bin/bash
# Verifica o valor de uma variável com case

cor="azul"

case $cor in
    "vermelho")
        echo "A cor é vermelho";;
    "azul")
        echo "A cor é azul";;
    "verde")
        echo "A cor é verde";;
    *)
        echo "Cor desconhecida";;
esac

### 6. Arrays

```bash
#!/bin/bash
# Definindo um array

meu_array=("Maçã" "Banana" "Laranja")

# Acessando elementos do array
echo "Primeiro elemento: ${meu_array[0]}"
echo "Todos os elementos: ${meu_array[@]}"


### 7. For Loop (Laço For)

```bash
#!/bin/bash
# Usando um laço for para iterar sobre uma lista

for numero in 1 2 3 4 5
do
    echo "Número: $numero"
done


### 8. Functions (Funções)

```bash
#!/bin/bash
# Definindo uma função

minha_funcao() {
    echo "Essa é uma função."
}

# Chamando a função
minha_funcao

### 9. Exit Codes (Códigos de Saída)

```bash
#!/bin/bash
# Um script retorna um código de saída

echo "Rodando o script..."
if [ -d "/etc" ]; then
    echo "Diretório /etc existe."
    exit 0  # Sucesso
else
    echo "Diretório /etc não encontrado."
    exit 1  # Falha
fi
